<?php
/**
 * Created by PhpStorm.
 * User: matthias
 * Date: 01.10.19
 * Time: 15:18
 */

namespace Otic\mw;


use InvalidArgumentException;
use Otic\AbstractOticMiddleware;

class InduradMiddleware extends AbstractOticMiddleware {

    private $failOnErr = true;

    private $minTs;

    private $messageCount = 0;
    
    public function __construct()
    {
        $this->minTs = strtotime("2016-01-01 00:00:00");
    }

    public function onClose()
    {
        parent::onClose(); // TODO: Change the autogenerated stub
        if ($this->messageCount === 0) {
            phore_log()->warning("Empty content. (Exit code 3)");
            exit(3); //Empty file
        }
    }

    public function message(array $data)
    {
        static $lastTs = 0;
        
        if ( ! is_array($data) || count($data) !== 5 ) {
            if ($this->failOnErr)
                throw new InvalidArgumentException("Line malformed: " . print_r($data, true));
            phore_log()->warning("Ignoring line " . print_r ($data, true));
            return;
        }

        $timestamp = $data[0];
        if ($timestamp < $this->minTs) {
            if ($this->failOnErr)
                throw new InvalidArgumentException("Line malformed: " . print_r($data, true));
            phore_log()->warning("Timestamp $timestamp before 2018");
            return;
        }
        
        if ($timestamp < $lastTs) {
            phore_log()->warning("Timestamp $timestamp before lastTs: $lastTs");
            return;
        }
        $lastTs = $timestamp;
        
        $colName = $data[1];
        $metaData = $data[3];
        $value = $data[4];

        $this->messageCount++;
        $this->next->message(["ts"=>$timestamp, "colname"=>$colName, "value"=>$value, "metadata" => $metaData]);
    }
}
